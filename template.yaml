AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  telegram-notion-bible

Globals:
  Function:
    Timeout: 3
    MemorySize: 128
    LoggingConfig:
      LogFormat: JSON

Resources:
  TelegramNotionBibleFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: app/
      Handler: main.lambda_handler
      Runtime: python3.11
      Architectures:
        - x86_64
      Environment:
        Variables:
          TABLE_NAME: !Ref TelegramChatIdsTable
          REGION_NAME: !Ref AWS::Region
      Events:
        TelegramBot:
          Type: Api
          Properties:
            Path: /webhook
            Method: post
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref TelegramChatIdsTable

  TelegramChatIdsTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      PrimaryKey:
        Name: chat_id
        Type: Number
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  TelegramBibleReminderSchedular:
    Type: AWS::Scheduler::Schedule
    Properties:
      Name: 'NotionBibleReminder'
      ScheduleExpression: 'rate(1 minute)'
      FlexibleTimeWindow:
        Mode: 'OFF'
      Target:
        Arn: !GetAtt TelegramNotionBibleFunction.Arn
        RoleArn: !GetAtt TelegramBibleScheduleRole.Arn

  TelegramBibleScheduleRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - scheduler.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: TelegramBibleScheduleRolePolicy
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - 'lambda:InvokeFunction'
                Resource:
                  - !GetAtt TelegramNotionBibleFunction.Arn

Outputs:
  TelegramBotApi:
    Description: API Gateway endpoint URL for Prod stage for Hello World function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/webhook/"
  TelegramNotionBibleFunction:
    Description: Hello World Lambda Function ARN
    Value: !GetAtt TelegramNotionBibleFunction.Arn
  TelegramNotionBibleFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value: !GetAtt TelegramNotionBibleFunctionRole.Arn
  TelegramChatIdsTable:
    Description: Table with collection telegram chat ids
    Value: !GetAtt TelegramChatIdsTable.Arn
